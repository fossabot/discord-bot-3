/* eslint-disable */
module.exports = {
    konachan: {
        name: 'konachan',
        group: 'anime',
        description: 'Random konachan image.',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    nekos: {
        name: 'nekos',
        group: 'anime',
        description: 'Uses the nekos.life API. SFW only.',
        examples: [ 'help', 'OwOify' ],
        arguments: [
         {
                type: 'string',
                key: 'command',
                prompt: "What's the sub-command you want to run?",
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'text',
                default: '',
                prompt: '',
                infinite: false
            }
        ],
        aliases: [],
        usage: ''
    },
    safebooru: {
        name: 'safebooru',
        group: 'anime',
        description: 'Random safebooru image.',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    sofurry: {
        name: 'sofurry',
        group: 'anime',
        description: 'Random image from sofurry',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    waifu: {
        name: 'waifu',
        group: 'anime',
        description: 'Shows random non-existent waifu generated by AI',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    balance: {
        name: 'balance',
        group: 'balance',
        aliases: [ 'bal' ],
        description: 'Shows yours BBS balance. More in `info user`',
        arguments: [
         {
                type: 'member',
                default: '',
                key: 'target',
                prompt: 'Which user to get balance from?',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    mine: {
        name: 'mine',
        group: 'balance',
        description: 'Mines BBS, once per 12 hours.',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    pay: {
        name: 'pay',
        group: 'balance',
        description: 'Pays someone BBS',
        arguments: [
         {
                prompt: 'Who to pay?',
                type: 'user',
                key: 'user',
                default: '',
                infinite: false
            },
         {
                prompt: 'What amount to pay?',
                type: 'float',
                key: 'amount',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    premium: {
        name: 'premium',
        group: 'balance',
        description: 'Information about premium and if you have active premium.',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    rich: {
        name: 'rich',
        aliases: [ 'richest', 'top' ],
        group: 'balance',
        description: 'Shows rich people',
        arguments: [
         {
                type: 'integer',
                key: 'page',
                prompt: 'Page to look at',
                default: 1,
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    apm: {
        name: 'apm',
        group: 'dev',
        description: 'Gets info about Atom Text Editor package',
        usage: 'apm <pkg>',
        arguments: [
         {
                key: 'pkg',
                type: 'string',
                prompt: 'Which Atom package to get info about?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: []
    },
    bang: {
        name: 'bang',
        aliases: [ 'ddg' ],
        group: 'dev',
        description: 'Shows link to DDG bang or shows instant answer',
        arguments: [
         {
                type: 'string',
                key: 'string',
                prompt: 'What to try searching on DDG instant answers / bangs?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    color: {
        name: 'color',
        group: 'dev',
        description: 'Previews color',
        arguments: [
         {
                type: 'string',
                key: 'color',
                prompt: 'What color you want to show?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    djs: {
        name: 'djs',
        group: 'dev',
        description: 'Searches in discord.js docs',
        usage: 'djs <query> [source]',
        arguments: [
         {
                type: 'string',
                key: 'query',
                prompt: 'Enter query to search for',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                default: 'stable',
                key: 'source',
                prompt: 'Source version to use',
                infinite: false
            }
        ],
        examples: [],
        aliases: []
    },
    dstatus: {
        name: 'dstatus',
        group: 'dev',
        description: 'Shows status of discord services.',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    format: {
        name: 'format',
        description: 'Shows information about formatting messages',
        group: 'dev',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    google: {
        name: 'google',
        group: 'dev',
        description: 'Shows link to search given text on google',
        arguments: [
         {
                type: 'string',
                key: 'string',
                prompt: 'What to google?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    extracthtml: {
        name: 'extracthtml',
        group: 'dev',
        description: 'Extracts some information from HTML page.',
        arguments: [
         {
                key: 'page',
                prompt: 'Which page to extract information?',
                type: 'string',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    code: {
        name: 'code',
        group: 'dev',
        description: 'Explanation for given http status code.',
        usage: 'code <code>',
        arguments: [
         {
                type: 'integer',
                key: 'code',
                prompt: 'What code to get info about?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: []
    },
    logme: {
        name: 'logme',
        group: 'dev',
        description: 'Shows properties of sent image',
        arguments: [
         {
                type: 'string',
                key: 'argument',
                default: '',
                prompt: 'string :)',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    npm: {
        name: 'npm',
        group: 'dev',
        description: 'Gets info about NPM package',
        usage: 'npm <pkg>',
        arguments: [
         {
                key: 'pkg',
                type: 'string',
                prompt: 'Which NPM package to get info about?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: []
    },
    php: {
        name: 'php',
        group: 'dev',
        description: 'Shows information from PHP documentation. Use either `ice php <class | function>` or `ice php <class>::<method>`. Use object oriented style when available.',
        usage: 'php help',
        arguments: [
         {
                type: 'string',
                key: 'php',
                prompt: 'Which class/function to get info about?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: []
    },
    request: {
        name: 'request',
        aliases: [ 'req' ],
        usage: 'req get http://ice.danbulant.eu/ text',
        group: 'dev',
        description: 'Makes a new HTTP request',
        arguments: [
         {
                type: 'string',
                key: 'method',
                prompt: "Which method to use? Type 'help' for more info.",
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'url',
                prompt: 'Which URL to make request on? If using help, enter anything.',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'format',
                prompt: 'Format to use (JSON or TEXT)',
                default: 'text',
                infinite: false
            }
        ],
        examples: []
    },
    stackoverflow: {
        name: 'stackoverflow',
        aliases: [ 'stack', 'so' ],
        group: 'dev',
        description: 'Searches in StackOverflow.',
        arguments: [
         {
                key: 'filter',
                prompt: 'What to search for?',
                type: 'string',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    extractwiki: {
        name: 'extractwiki',
        group: 'dev',
        description: 'Extracts some information from Wikipedia page.',
        arguments: [
         {
                key: 'page',
                prompt: 'Which page to extract information?',
                type: 'string',
                default: '',
                infinite: false
            },
         {
                key: 'lang',
                prompt: 'Which language to fetch from?',
                type: 'string',
                default: 'en',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    achievements: {
        name: 'achievements',
        group: 'essentials',
        description: 'List all your achievements',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    avatar: {
        name: 'avatar',
        aliases: [ 'av', 'pfp' ],
        group: 'essentials',
        description: "Shows yours (or someone else's) avatar",
        arguments: [
         {
                default: '',
                prompt: 'User to check on?',
                key: 'user',
                type: 'user',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    covid: {
        name: 'covid',
        aliases: [ 'covid19', 'corona', 'coronavirus', 'covidinfo', 'coronainfo' ],
        group: 'essentials',
        description: 'Shows recent information about COVID-19',
        usage: 'covid [country]',
        arguments: [
         {
                type: 'string',
                key: 'country',
                default: 'Global',
                prompt: 'which countrys stats do you want to see?',
                infinite: false
            }
        ],
        examples: []
    },
    fact: {
        name: 'fact',
        group: 'essentials',
        description: 'Shows random useless fact',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    invite: {
        name: 'invite',
        group: 'essentials',
        description: 'Shows bot invite link',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    math: {
        name: 'math',
        aliases: [ 'calc', 'calculator' ],
        group: 'essentials',
        description: 'Calculates given math expression',
        arguments: [
         {
                type: 'string',
                key: 'expression',
                prompt: 'What expression to calculate?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    oldest: {
        name: 'oldest',
        aliases: [ 'old' ],
        group: 'essentials',
        description: 'Shows oldest users on discord',
        examples: [],
        usage: '',
        arguments: []
    },
    puppy: {
        name: 'puppy',
        group: 'essentials',
        description: 'Shows random puppy image',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    reddit: {
        name: 'reddit',
        aliases: [
            'meme',
            'memes',
            'dankmeme',
            'dankmemes',
            'cursedimage',
            'cursedimages'
        ],
        group: 'essentials',
        description: 'Gets random image from given subreddit. Can be used with or without r/',
        arguments: [
         {
                type: 'string',
                key: 'reddit',
                prompt: 'Which subreddit to get image from?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    voted: {
        name: 'voted',
        aliases: [ 'vote' ],
        group: 'essentials',
        description: 'Checks your vote status',
        examples: [],
        usage: '',
        arguments: []
    },
    ascii: {
        name: 'ascii',
        aliases: [ 'figlet' ],
        description: 'Makes ascii text. For list of fonts, see [figlet.js](https://github.com/patorjk/figlet.js/).',
        usage: 'ascii [font] <text>',
        group: 'fun',
        arguments: [
         {
                type: 'string',
                key: 'font',
                prompt: "What font to use? If not valid, 'Doom' is used.",
                default: 'Doom',
                infinite: false
            },
         {
                type: 'string',
                key: 'text',
                prompt: 'Text to use',
                default: '',
                infinite: false
            }
        ],
        examples: []
    },
    clap: {
        name: 'clap',
        aliases: [ 'clapify' ],
        description: 'Clapify given text',
        group: 'fun',
        arguments: [
         {
                type: 'string',
                key: 'string',
                prompt: 'Text to clapify',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    cool: {
        name: 'cool',
        group: 'fun',
        description: 'Cool up something',
        arguments: [
         {
                key: 'cool',
                type: 'string',
                prompt: 'What do you want to cool?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    cow: {
        name: 'cow',
        group: 'fun',
        description: 'Ascii cow saying or thinking whatever you want',
        arguments: [
         {
                type: 'string',
                key: 'variant',
                prompt: 'Variant to use, think or say?',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'text',
                prompt: 'Text to make cow say/think:',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    dab: {
        name: 'dab',
        group: 'fun',
        description: 'DAB',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    joke: {
        name: 'joke',
        description: 'Shows random joke',
        group: 'fun',
        usage: 'joke [type]',
        arguments: [
         {
                type: 'string',
                key: 'type',
                default: 'random',
                prompt: 'Which type of joke you want to see?',
                infinite: false
            }
        ],
        examples: [],
        aliases: []
    },
    leetify: {
        name: 'leetify',
        aliases: [ 'leet' ],
        description: 'Leetify your text',
        group: 'fun',
        arguments: [
         {
                type: 'string',
                key: 'string',
                prompt: 'Text to leetify:',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    lenny: {
        name: 'lenny',
        description: "Everyone knows what's lenny",
        group: 'fun',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    reddituser: {
        name: 'reddituser',
        group: 'fun',
        aliases: [ 'ru' ],
        description: 'Fetch information about a reddit user',
        arguments: [
         {
                type: 'string',
                key: 'user',
                prompt: 'which reddit user to fetch info from?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    say: {
        name: 'say',
        group: 'fun',
        description: 'Make the bot say what you want',
        arguments: [
         {
                type: 'string',
                key: 'string',
                prompt: 'What do you want bot to say?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    spoiler: {
        name: 'spoiler',
        aliases: [ 'spoil' ],
        group: 'fun',
        description: 'Make the bot say something in annoying spoilers',
        arguments: [
         {
                type: 'string',
                key: 'string',
                prompt: 'What to say:',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    subinfo: {
        name: 'subinfo',
        group: 'fun',
        aliases: [ 'sub' ],
        description: 'Fetch information about a subreddit',
        arguments: [
         {
                type: 'string',
                key: 'sub',
                prompt: 'which subreddit to fetch info from?',
                default: 'random',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    urban: {
        name: 'urban',
        aliases: [ 'ud' ],
        description: 'Find the meaning in the Urban Dictionary',
        usage: 'urban <text>',
        group: 'fun',
        arguments: [
         {
                type: 'string',
                key: 'text',
                prompt: 'What is the word do you want to look up?',
                default: '',
                infinite: false
            }
        ],
        examples: []
    },
    vaporwave: {
        name: 'vaporwave',
        aliases: [ 'vaporify' ],
        group: 'fun',
        description: 'Vaporify given text',
        arguments: [
         {
                type: 'string',
                key: 'string',
                prompt: 'What to vaporify?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    poke: {
        name: 'poke',
        group: 'games',
        description: 'Finds something in pokedex',
        usage: 'poke help',
        arguments: [
         {
                type: 'string',
                key: 'cmd',
                prompt: 'Which subcommand to use? Use help to see available ones.',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'poke',
                prompt: 'Pokemon to see',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: []
    },
    skin: {
        name: 'skin',
        group: 'games',
        description: 'Shows skin of given user',
        arguments: [
         {
                key: 'username',
                prompt: 'Enter username of the minecraft player to show skin of:',
                type: 'string',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    fone: {
        name: 'fone',
        group: 'image',
        description: 'Shows random image from happy fone api',
        arguments: [
         {
                default: 'cat',
                prompt: 'Enter type of resource',
                key: 'type',
                type: 'string',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    makeameme: {
        name: 'makeameme',
        aliases: [ 'makememe', 'genmeme' ],
        group: 'image',
        description: 'Make a meme using imageurl/avatar toptext botomtext',
        arguments: [
         {
                type: 'user|url',
                key: 'url',
                prompt: 'Image URL to make meme of:',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'top',
                prompt: 'Top text of meme:',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'bottom',
                prompt: 'Bottom text of meme:',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    qr: {
        name: 'qr',
        aliases: [ 'qrcode' ],
        usage: 'qr <text>',
        group: 'image',
        description: 'Makes a QRCode from given text',
        arguments: [
         {
                type: 'string',
                key: 'text',
                prompt: 'Text to encode into QRCode',
                default: '',
                infinite: false
            }
        ],
        examples: []
    },
    xkcd: {
        name: 'xkcd',
        group: 'image',
        aliases: [ 'comic' ],
        description: 'Shows todays xkcd comic.',
        examples: [],
        usage: '',
        arguments: []
    },
    announce: {
        name: 'announce',
        aliases: [ 'announcement' ],
        group: 'mod',
        description: 'Make the bot announce what you want.',
        arguments: [
         {
                type: 'string',
                key: 'title',
                prompt: "What's the title of announcement?",
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'string',
                prompt: 'What do you want to announce?',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'color',
                default: '000',
                prompt: "What's the color you want to use?",
                infinite: false
            },
         {
                type: 'boolean',
                key: 'showAuthor',
                default: '',
                prompt: 'Do you want to show you as author?',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    ban: {
        name: 'ban',
        group: 'mod',
        description: 'Bans a user',
        usage: 'ban <user> <daysToDeleteMessages> <reason>',
        arguments: [
         {
                type: 'user',
                key: 'user',
                prompt: 'which user do you want to ban?',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'reason',
                prompt: 'why do you want to ban this user?',
                default: 'No reason specified',
                infinite: false
            }
        ],
        examples: [],
        aliases: []
    },
    case: {
        name: 'case',
        group: 'mod',
        description: 'Shows an offender case',
        arguments: [
         {
                type: 'integer',
                key: 'case',
                prompt: 'which case do you want to view?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    channels: {
        name: 'channels',
        group: 'mod',
        description: 'Lists allowed channels or sets/removes them',
        arguments: [
         {
                prompt: 'Please select an option: `<add | remove | clear>`',
                default: '',
                key: 'option',
                type: 'string',
                infinite: false
            },
         {
                prompt: 'Which channels to add/remove?',
                default: '',
                key: 'channels',
                infinite: true,
                type: 'channel'
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    clearsettings: {
        name: 'clearsettings',
        group: 'mod',
        description: 'Clears all the guilds settings',
        arguments: [
         {
                key: 'confirmation',
                type: 'string',
                prompt: 'WARNING - this will delete all the guilds cases and other settings! Are you sure? Type `confirm` to confirm.',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    count: {
        name: 'count',
        group: 'mod',
        description: 'Shows information about members of this channel',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    giveaway: {
        name: 'giveaway',
        group: 'mod',
        description: 'Makes a giveaway in current channel',
        arguments: [
         {
                type: 'channel',
                prompt: 'Which channel to send to?',
                key: 'channel',
                default: '',
                infinite: false
            },
         {
                type: 'integer',
                prompt: 'How many minutes to wait?',
                key: 'time',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                prompt: 'Which item for winning?',
                key: 'item',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    history: {
        name: 'history',
        group: 'mod',
        description: 'Shows on offenders history',
        arguments: [
         {
                type: 'user',
                key: 'user',
                prompt: 'which users offense history do you want to view?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    info: {
        name: 'info',
        group: 'mod',
        description: 'Gets information',
        usage: 'info help',
        arguments: [
         {
                type: 'string',
                key: 'command',
                prompt: 'Which resource you want to get info about?',
                default: '',
                infinite: false
            },
         {
                type: 'user|string|role|channel',
                key: 'pointer',
                prompt: '',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: []
    },
    kick: {
        name: 'kick',
        group: 'mod',
        description: 'Kicks a user',
        arguments: [
         {
                type: 'user',
                key: 'user',
                prompt: 'which user do you want to kick?',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'reason',
                prompt: 'why do you want to kick this user?',
                default: 'No reason specified',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    lang: {
        name: 'lang',
        group: 'mod',
        aliases: [ 'language' ],
        description: 'Sets server language',
        arguments: [
         {
                type: 'string',
                key: 'lang',
                prompt: 'What language do you want to use?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    log: {
        name: 'log',
        aliases: [ 'logs' ],
        group: 'mod',
        description: 'Log settings. When altering, use +option to add, -option to remove and !option to toggle log options',
        arguments: [
         {
                type: 'string',
                key: 'command',
                prompt: 'Which action to do?',
                default: '',
                infinite: false
            },
         {
                type: 'channel',
                key: 'channel',
                prompt: 'Which channel to add/remove?',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'settings',
                prompt: '',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    profile: {
        name: 'profile',
        group: 'mod',
        description: 'Shows user profile',
        aliases: [ 'user', 'member' ],
        arguments: [
         {
                key: 'user',
                type: 'uuid|user',
                prompt: 'What user to get info about?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    purge: {
        name: 'purge',
        group: 'mod',
        description: 'Deletes a certain amount of message in channel',
        arguments: [
         {
                type: 'integer',
                key: 'amount',
                prompt: 'How many messages do you want to delete?',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'delete',
                prompt: 'Delete the message as well?',
                default: 'false',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    reason: {
        name: 'reason',
        aliases: [ 'editreason' ],
        group: 'mod',
        description: 'Warns a user',
        arguments: [
         {
                type: 'integer',
                key: 'case',
                prompt: 'which case do you want to edit?',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'reason',
                prompt: 'what should the new reason be?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    removewarn: {
        name: 'removewarn',
        group: 'mod',
        description: 'Remove a warn from a user',
        arguments: [
         {
                type: 'integer',
                key: 'case',
                prompt: 'which warn case do you want to remove?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    role: {
        name: 'role',
        aliases: [ 'r', 'roles' ],
        group: 'mod',
        description: 'Add, remove or toggle a role on a user',
        arguments: [
         {
                type: 'string',
                key: 'option',
                prompt: 'Please select an option: `<add | remove | toggle>`',
                default: '',
                infinite: false
            },
         {
                type: 'user',
                key: 'user',
                prompt: 'Which user would you like to select?',
                default: '',
                infinite: false
            },
         {
                type: 'role',
                key: 'role',
                prompt: 'Which role would you like to select?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    stats: {
        name: 'stats',
        group: 'mod',
        description: 'Statistics and information about ice',
        aliases: [ 'statistics', 'about' ],
        examples: [],
        usage: '',
        arguments: []
    },
    togglelevel: {
        name: 'togglelevel',
        aliases: [ 'toggle-level' ],
        group: 'mod',
        description: 'Toggles level up messages',
        examples: [],
        usage: '',
        arguments: []
    },
    warn: {
        name: 'warn',
        group: 'mod',
        description: 'Warns a user',
        arguments: [
         {
                type: 'user',
                key: 'user',
                prompt: 'which user do you want to warn?',
                default: '',
                infinite: false
            },
         {
                type: 'string',
                key: 'reason',
                prompt: 'why do you want to warn this user?',
                default: 'No reason specified',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    join: {
        name: 'join',
        group: 'music',
        description: "Joins voice channel you're currently in.",
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    jump: {
        name: 'jump',
        group: 'music',
        description: 'Jumps to selected position in queue',
        arguments: [
         {
                type: 'integer',
                key: 'number',
                prompt: 'To which position in queue to jump to?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    leave: {
        name: 'leave',
        group: 'music',
        description: 'Leaves the voice channel.',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    now: {
        name: 'now',
        aliases: [ 'np', 'now-playing' ],
        group: 'music',
        description: 'Show current playing song',
        examples: [],
        usage: '',
        arguments: []
    },
    pause: {
        name: 'pause',
        group: 'music',
        description: 'Pauses playback',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    play: {
        name: 'play',
        group: 'music',
        description: 'Add given music into queue',
        arguments: [
         {
                key: 'url',
                type: 'string',
                prompt: 'What music to add?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    queue: {
        name: 'queue',
        group: 'music',
        description: 'List current queue',
        arguments: [
         {
                key: 'selected',
                default: '',
                type: 'integer',
                prompt: 'Which song to get info about?',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    remove: {
        name: 'remove',
        group: 'music',
        description: 'Remove song from queue',
        arguments: [
         {
                key: 'selected',
                type: 'integer',
                prompt: 'Which song to remove from queue?',
                default: '',
                infinite: false
            },
         {
                key: 'length',
                default: 1,
                type: 'integer',
                prompt: 'How many songs to delete?',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    resume: {
        name: 'resume',
        group: 'music',
        description: 'Resumes playback',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    shuffle: {
        name: 'shuffle',
        group: 'music',
        description: 'Shuffles the queue',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    skip: {
        name: 'skip',
        group: 'music',
        description: 'Skips currently playing song(s)',
        arguments: [
         {
                type: 'integer',
                key: 'number',
                prompt: 'How many songs to skip?',
                default: 1,
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    stop: {
        name: 'stop',
        group: 'music',
        description: 'Stops the music player',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    volume: {
        name: 'volume',
        aliases: [ 'vol' ],
        group: 'music',
        description: 'Sets music volume',
        arguments: [
         {
                type: 'integer',
                default: -1,
                key: 'volume',
                prompt: 'What to set the new volume to?',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    booru: {
        name: 'booru',
        group: 'nsfw',
        description: 'Random image from booru site',
        arguments: [
         {
                type: 'string',
                key: 'booru',
                prompt: 'Which booru site to get info from?',
                default: '',
                infinite: false
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    danbooru: {
        name: 'danbooru',
        group: 'nsfw',
        description: 'Random image from danbooru',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    gelbooru: {
        name: 'gelbooru',
        group: 'nsfw',
        description: 'Random image from gelbooru',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    hypnohub: {
        name: 'hypnohub',
        group: 'nsfw',
        description: 'HYPNO NSFW',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    'konachan-lewd': {
        name: 'konachan-lewd',
        group: 'nsfw',
        description: 'Random konachan image. NSFW.',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    'nekos-lewd': {
        name: 'nekos-lewd',
        group: 'nsfw',
        description: 'Uses the nekos.life API. NSFW only.',
        examples: [ 'nekos-lewd help' ],
        arguments: [
         {
                type: 'string',
                key: 'command',
                prompt: "What's the sub-command you want to run?",
                default: '',
                infinite: false
            }
        ],
        aliases: [],
        usage: ''
    },
    realbooru: {
        name: 'realbooru',
        group: 'nsfw',
        description: 'Real booru',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    rule34: {
        name: 'rule34',
        group: 'nsfw',
        description: 'Random safebooru image.',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    xbooru: {
        name: 'xbooru',
        group: 'nsfw',
        description: 'Dirty sister of rule34',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    yandere: {
        name: 'yandere',
        group: 'nsfw',
        description: 'Random image from yandere',
        examples: [],
        aliases: [],
        usage: '',
        arguments: []
    },
    blacklist: {
        name: 'blacklist',
        group: 'special',
        description: 'Prohibit a user from using this bot',
        arguments: [
         {
                prompt: 'Please select an option: `<add | remove | clear>`',
                default: 'list',
                key: 'option',
                type: 'string',
                infinite: false
            },
         {
                prompt: 'Which users to add/remove?',
                default: '',
                key: 'users',
                infinite: true,
                type: 'user'
            }
        ],
        examples: [],
        aliases: [],
        usage: ''
    },
    guilds: {
        name: 'guilds',
        aliases: [ 'guilds' ],
        group: 'special',
        description: 'Lists guilds Aztec is in',
        examples: [],
        usage: '',
        arguments: []
    },
    shorten: {
        name: 'shorten',
        aliases: [ 'short' ],
        group: 'special',
        description: 'Shorten URL',
        arguments: [
         {
                key: 'source',
                type: 'string',
                prompt: "What's the source URL? Max 64 characters.",
                default: '',
                infinite: false
            },
         {
                key: 'target',
                type: 'url',
                prompt: "What's the target URL?",
                default: '',
                infinite: false
            }
        ],
        examples: [],
        usage: ''
    },
    help: {
        name: 'help',
        group: 'util',
        aliases: [ 'commands' ],
        description: 'Displays a list of available commands, or detailed information for a specified command',
        usage: 'help [command | command group]',
        examples: [ 'help', 'help prefix' ],
        arguments: [
         {
                type: 'group|command',
                key: 'command',
                prompt: 'Which command or command group do you want details about?',
                default: '',
                infinite: false
            }
        ]
    }
}
